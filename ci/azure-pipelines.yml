# Copyright the Hyperledger Fabric contributors. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0


name: $(SourceBranchName)-$(Date:yyyyMMdd)$(Rev:.rrr)
trigger:
  branches:
    include:
      - release-2.2
  paths:
    exclude:
      - tools/chaincode-integration/*
pr:
  branches:
    include:
      - release-2.2
  paths:
    exclude:
      - tools/chaincode-integration/*

variables:
  FABRIC_CFG_PATH: $(Agent.BuildDirectory)/go/src/github.com/hyperledger/fabric-test/config/
  GO_BIN: $(Agent.BuildDirectory)/go/bin
  GO_PATH: $(Agent.BuildDirectory)/go
  GO_VER: 1.14.2
  NODE_VER: 12.15.0
  PATH: $(Agent.BuildDirectory)/go/bin:$(Agent.BuildDirectory)/go/src/github.com/hyperledger/fabric-test/bin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin
stages:
  - stage: TestPullRequest
    dependsOn: []
    displayName: Test Pull Request
    pool:
      vmImage: ubuntu-18.04
    jobs:
      - job: VerifyBuild
        steps:
          - checkout: self
            path: 'go/src/github.com/hyperledger/fabric-test'
            displayName: Checkout Fabric Test Code
          - template: templates/install_deps.yml
          - script: make lint
            displayName: Lint Code
          - script: make unit-tests
            displayName: Run Go Tests

      - job: SmokeTest
        steps:
          - checkout: self
            path: 'go/src/github.com/hyperledger/fabric-test'
            displayName: Checkout Fabric Test Code
          - template: templates/install_deps.yml
          - script: make regression/smoke
            displayName: Run Smoke Tests
          - task: PublishTestResults@2
            condition: always()
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'regression/smoke/results*.xml'

      - job: BasicNetworkTest
        steps:
          - checkout: self
            path: 'go/src/github.com/hyperledger/fabric-test'
            displayName: Checkout Fabric Test Code
          - template: templates/install_deps.yml
          - script: make regression/basicnetwork
            displayName: Run Basic Network
          - task: PublishTestResults@2
            condition: always()
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'regression/smoke/results*.xml'
